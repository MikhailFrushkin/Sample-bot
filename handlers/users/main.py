import os
import random

from aiogram import types
from aiogram.dispatcher import FSMContext
from loguru import logger
from peewee import fn

import bot
from data.config import path, video_links, ADMINS
from data.db import get_or_create_user, User
from handlers.users.back import back
from keyboards.default.menu import create_lesson_keyboard
from keyboards.inline.action import inline_kb
from loader import dp, bot
from state.states import Record


@dp.callback_query_handler(lambda c: c.data == 'check_1')
async def process_callback_button1(callback_query: types.CallbackQuery):
    print('asdasd')
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, '–ö–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞!')


@dp.message_handler(commands=['start'], state='*')
async def bot_start(message: types.Message, state: FSMContext):
    """
    –°—Ç–∞—Ä—Ç –±–æ—Ç–∞, –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –Ω–µ—Ç, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–∞—Ä–æ–ª—å
    """
    logger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {}: {} {} –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É {}'.format(
        message.from_user.id,
        message.from_user.first_name,
        message.from_user.username,
        message.text
    ))
    user_tg = message.from_user
    user = get_or_create_user(user_tg.id, user_tg.first_name, user_tg.last_name, user_tg.username)
    await message.answer(f"""–ü—Ä–∏–≤–µ—Ç, <b>{user_tg.first_name}</b>!
–¢—ã —É–∂–µ –Ω–∞ –ø–æ–ª–ø—É—Ç–∏ –∫ —Å–æ–≤—Å–µ–º –¥—Ä—É–≥–æ–º—É —É—Ä–æ–≤–Ω—é –±–∏–∑–Ω–µ—Å–∞ –∏ –∂–∏–∑–Ω–∏.
–ó–∞–±—É–¥—å –æ:
‚Ä¢ –¥–ª–∏–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–µ–≤–∞—Ö
‚Ä¢ –≥–æ–Ω–∫–µ –∑–∞ –≤—ã—Å–æ–∫–∏–º–∏ –æ—Ö–≤–∞—Ç–∞–º–∏ –≤ —Å—Ç–æ—Ä–∏—Å
‚Ä¢ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö Reels, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏–∫–∞–∫ –Ω–µ –∑–∞–ª–µ—Ç–∞—é—Ç 

–ó–¥–µ—Å—å —è –ø–æ–∫–∞–∂—É 5 —à–∞–≥–æ–≤ –ø–æ –º–æ–µ–º—É –∞–≤—Ç–æ—Ä—Å–∫–æ–º—É –º–µ—Ç–æ–¥—É, —á—Ç–æ–±—ã <b>–£–ü–†–ê–í–õ–Ø–¢–¨</b> —Å–≤–æ–∏–º –¥–æ—Ö–æ–¥–æ–º –∏ –ø–æ—Ç–æ–∫–æ–º –∫–ª–∏–µ–Ω—Ç–æ–≤.

–£–∑–Ω–∞–µ—à—å:

‚Ä¢ –∫–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç –±—É–¥–µ—Ç –ø—Ä–æ–¥–∞–≤–∞—Ç—å—Å—è –¥–æ—Ä–æ–≥–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –≤ –≤–∞—à–µ–º –±–ª–æ–≥–µ 100 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
‚Ä¢ –∫–∞–∫–∏–µ –Ω—É–∂–Ω—ã –≤–æ—Ä–æ–Ω–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å 2-5 –∫–ª–∏–µ–Ω—Ç–æ–≤ <b>–ö–ê–ñ–î–´–ô</b> –¥–µ–Ω—å, –¥–∞–∂–µ –∫–æ–≥–¥–∞ —Å–ø–∏—à—å, –µ—à—å, –æ—Ç–¥—ã—Ö–∞–µ—à—å –æ—Ç –±–ª–æ–≥–∞
‚Ä¢ –∫–∞–∫ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞—Ö <b>–ö–ê–ñ–î–û–ú–£</b> –≤—Ç–æ—Ä–æ–º—É –Ω–∞ —á–µ–∫ 150-300-50 —Ç—ã—Å –∏ <b>–ù–ï</b> –≤—ã–≥–æ—Ä–∞—Ç—å 
‚Ä¢ –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å–≤—è–∑–∫—É –ø—Ä–æ–¥–∞–∂, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º, –±–µ–∑ –≤—ã–≥–æ—Ä–∞–Ω–∏—è –∏ –≤—ã–¥–µ–ª—è—Ç—å—Å—è —Å—Ä–µ–¥–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
‚Ä¢ –∫–∞–∫ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ—Å–ø–æ—Å–æ–±–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –æ–∫—É–ø–∞—Ç—å —Ä–µ–∫–ª–∞–º—É –≤ 4 —Ä–∞–∑–∞
    """,
                         reply_markup=create_lesson_keyboard(user.lesson, user.user_id)
                         )
    video_note_path = 'prewie.mp4'
    with open(video_note_path, 'rb') as video_note_file:
        await bot.send_video_note(chat_id=message.chat.id, video_note=video_note_file)
    await bot.send_message(message.from_user.id, '–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ üëá')


@dp.message_handler(commands=['help'], state='*')
async def bot_start(message: types.Message, state: FSMContext):
    """
    –ü–æ–º–æ—â—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    user_tg = message.from_user
    user = get_or_create_user(user_tg.id, user_tg.first_name, user_tg.last_name, user_tg.username)
    await bot.send_message(user_tg.id, "–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ –∫ –±–æ—Ç—É",
                           reply_markup=create_lesson_keyboard(user.lesson, user.user_id))


@dp.message_handler(lambda message: message.text.startswith('‚ñ∂Ô∏è–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å'))
async def send_lesson_link(message: types.Message):
    user = User.get(User.user_id == message.from_user.id)
    lesson_number = message.text.split()[-2]
    video_url = video_links.get(lesson_number, None).get('url')
    text = video_links.get(lesson_number, None).get('text')
    if video_url:
        user.lesson += 1
        user.save()
        await message.reply(video_url)
        await bot.send_message(message.from_user.id, text,
                               reply_markup=create_lesson_keyboard(user.lesson, user.user_id))
        if user.lesson < 6:
            await bot.send_message(message.from_user.id, '–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ üëá')
    else:
        await message.reply("–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")


@dp.message_handler(content_types=['text'], state='*')
async def bot_message(message: types.Message, state: FSMContext):
    user = User.get(User.user_id == message.from_user.id)
    if message.text == 'üîô–ù–∞–∑–∞–¥':
        await back(message, state)
    if message.text == 'üé¨–î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–∫–∏':
        lesson = 1
        while lesson <= len(video_links):
            await bot.send_message(message.from_user.id, f'–£—Ä–æ–∫ {lesson}')
            await message.reply(video_links[str(lesson)]['url'],
                                reply_markup=create_lesson_keyboard(user.lesson, user.user_id))
            lesson += 1
            if lesson >= user.lesson or lesson > len(video_links):
                break
    elif message.text == 'üìù–•–û–ß–£ –ù–ê –†–ê–ó–ë–û–†':
        user.check_1 = True
        user.save()
        media = types.MediaGroup()
        media2 = types.MediaGroup()
        directory = f'{path}/media'
        for index, item in enumerate(os.listdir(directory)):
            full_path = os.path.join(directory, item)
            if item.lower().endswith('.mp4'):
                media2.attach_video(types.InputFile(full_path))
            else:
                media.attach_photo(types.InputFile(full_path))

        await bot.send_media_group(message.from_user.id, media)
        await bot.send_media_group(message.from_user.id, media2)
        await bot.send_message(message.from_user.id, '  –ê –≤–æ—Ç, —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –º–æ–∏ —É—á–µ–Ω–∏–∫–∏ –ø–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –º–æ–µ–≥–æ –º–µ—Ç–æ–¥–∞.',
                               reply_markup=create_lesson_keyboard(user.lesson, user.user_id))
        await bot.send_message(message.from_user.id,
                               """–í—ã —É–∂–µ –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –¥–æ—à–ª–∏ –¥–æ —ç—Ç–æ–π —á–∞—Å—Ç–∏ –º–æ–µ–π –≤–æ—Ä–æ–Ω–∫–∏. –ò —Å–µ–π—á–∞—Å –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ: –≤—ã –≥–æ—Ç–æ–≤—ã –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ –∏–ª–∏ –ø–æ–∑–≤–æ–ª–∏—Ç–µ —Å–≤–æ–∏–º —Å–æ–º–Ω–µ–Ω–∏—è–º –∏ —Å—Ç—Ä–∞—Ö–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º–∏?\n–ú–∏–ª–ª–∏–æ–Ω–µ—Ä—ã —Å—Ç–∞–ª–∏ –º–∏–ª–ª–∏–æ–Ω–µ—Ä–∞–º–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –¥–∞–ª–∏ —Å–µ–±–µ —à–∞–Ω—Å —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –ò—Å–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–µ <b>–•–û–ß–£</b>. –î–∞–∂–µ –ø–æ—Å–ª–µ –ø–∞–¥–µ–Ω–∏–π –∏ –ø—Ä–æ–≤–∞–ª–æ–≤. –ò –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–æ–∏—Ç —Å–µ–π—á–∞—Å —Ç–µ–±–µ –∑–∞–¥–∞—Ç—å - <b>–ö–ê–ö</b> —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å <b>–ú–ù–ï</b>? –¢–∞–∫, —á—Ç–æ–±—ã –º–Ω–µ –±—ã–ª–æ <b>–ö–û–ú–§–û–†–¢–ù–û</b>.\n–ó–∞ —ç—Ç–∏–º –∫–æ –º–Ω–µ –∏ –∏–¥—É—Ç –≤ –ª–∏—á–Ω—É—é —Ä–∞–±–æ—Ç—É. –ù–∞ —Ä–∞–∑–±–æ—Ä–µ –ø–æ—Å—Ç—Ä–æ–∏–º –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∫ –∂–µ–ª–∞–µ–º–æ–º—É –¥–æ—Ö–æ–¥—É.\n –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –∞–Ω–∫–µ—Ç—É –ø–æ <b>–∫–Ω–æ–ø–∫–µ</b>üëá""",
                               reply_markup=inline_kb)

    elif message.text == 'üö∂üèº‚Äç‚ôÄÔ∏è–ò–î–£ –ù–ê –†–ê–ó–ë–û–†':
        user.check_2 = True
        user.save()
        await bot.send_message(message.from_user.id, '–ó–∞–ø–∏—Å—å –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é —Å–µ—Å—Å–∏—é –ø–æ –∫–Ω–æ–ø–∫–µüëá',
                               reply_markup=inline_kb)
    elif message.text == 'üìï–ê–Ω–∫–µ—Ç–∞':
        await bot.send_message(message.from_user.id, '–ó–∞–ø–∏—Å—å –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é —Å–µ—Å—Å–∏—é –ø–æ –∫–Ω–æ–ø–∫–µüëá',
                               reply_markup=inline_kb)
    elif message.text == 'üëÄ–û—Ç–∑—ã–≤—ã':
        media = types.MediaGroup()
        media2 = types.MediaGroup()
        directory = f'{path}/media'
        for index, item in enumerate(os.listdir(directory)):
            full_path = os.path.join(directory, item)
            if item.lower().endswith('.mp4'):
                media2.attach_video(types.InputFile(full_path))
            else:
                media.attach_photo(types.InputFile(full_path))

        await bot.send_media_group(message.from_user.id, media)
        await bot.send_media_group(message.from_user.id, media2)
        await bot.send_message(message.from_user.id,
                               """–ê –≤–æ—Ç, —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –º–æ–∏ —É—á–µ–Ω–∏–∫–∏ –ø–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –º–æ–µ–≥–æ –º–µ—Ç–æ–¥–∞.\n–í—ã —É–∂–µ –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –¥–æ—à–ª–∏ –¥–æ —ç—Ç–æ–π —á–∞—Å—Ç–∏ –º–æ–µ–π –≤–æ—Ä–æ–Ω–∫–∏. –ò —Å–µ–π—á–∞—Å –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ: –≤—ã –≥–æ—Ç–æ–≤—ã –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ –∏–ª–∏ –ø–æ–∑–≤–æ–ª–∏—Ç–µ —Å–≤–æ–∏–º —Å–æ–º–Ω–µ–Ω–∏—è–º –∏ —Å—Ç—Ä–∞—Ö–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º–∏?\n–ú–∏–ª–ª–∏–æ–Ω–µ—Ä—ã —Å—Ç–∞–ª–∏ –º–∏–ª–ª–∏–æ–Ω–µ—Ä–∞–º–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –¥–∞–ª–∏ —Å–µ–±–µ —à–∞–Ω—Å —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –ò—Å–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–µ <b>–•–û–ß–£</b>. –î–∞–∂–µ –ø–æ—Å–ª–µ –ø–∞–¥–µ–Ω–∏–π –∏ –ø—Ä–æ–≤–∞–ª–æ–≤. –ò –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–æ–∏—Ç —Å–µ–π—á–∞—Å —Ç–µ–±–µ –∑–∞–¥–∞—Ç—å - <b>–ö–ê–ö</b> —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å <b>–ú–ù–ï</b>? –¢–∞–∫, —á—Ç–æ–±—ã –º–Ω–µ –±—ã–ª–æ <b>–ö–û–ú–§–û–†–¢–ù–û</b>.\n–ó–∞ —ç—Ç–∏–º –∫–æ –º–Ω–µ –∏ –∏–¥—É—Ç –≤ –ª–∏—á–Ω—É—é —Ä–∞–±–æ—Ç—É. –ù–∞ —Ä–∞–∑–±–æ—Ä–µ –ø–æ—Å—Ç—Ä–æ–∏–º –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∫ –∂–µ–ª–∞–µ–º–æ–º—É –¥–æ—Ö–æ–¥—É.\n –ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –∞–Ω–∫–µ—Ç—É –ø–æ <b>–∫–Ω–æ–ø–∫–µ</b>üëá""",
                               reply_markup=inline_kb)
    elif message.text == 'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        total_users = User.select().count()
        mess = ''
        mess += f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        lesson_stats = (User
                        .select(User.lesson, fn.COUNT(User.lesson).alias('count'))
                        .group_by(User.lesson))
        for stat in lesson_stats:
            mess += f"–£—Ä–æ–∫: {stat.lesson}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stat.count}\n"
        await bot.send_message(message.from_user.id, mess,
                               reply_markup=create_lesson_keyboard(user.lesson, user.user_id))

    else:
        await bot.send_message(message.from_user.id,
                               "–ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–ª–∏ "
                               "–Ω–∞–∂–º–∏—Ç–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç /help")

    # for item in ADMINS:
    #     await bot.send_message(item, f'log:{message.from_user.id}|{message.from_user.first_name}|{message.text}')
    await bot.send_message(880277049, f'log:{message.from_user.id}|{message.from_user.first_name}|{message.text}')
